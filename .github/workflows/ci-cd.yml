name: Deploy Next.js SSR (Standalone) to VPS

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: npm ci

      # 4️⃣ Build Next.js app (Standalone SSR)
      - name: Build Next.js app
        run: npm run build
        env:
          NEXT_PUBLIC_BASE_URL: "https://landing.tpt.io.vn"
          NEXT_TELEMETRY_DISABLED: 1

      # 5️⃣ Deploy build to VPS
      - name: Deploy to VPS
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VPS_HOST: ${{ secrets.VPS_HOST }}
          VPS_USER: ${{ secrets.VPS_USER }}
          VPS_DEST_PATH: ${{ secrets.VPS_DEST_PATH }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key

          # Copy standalone folder (chứa server.js + node_modules)
          rsync -avz --delete -e "ssh -i private_key -o StrictHostKeyChecking=no" \
            .next/standalone/ $VPS_USER@$VPS_HOST:$VPS_DEST_PATH/

          # Copy static assets
          rsync -avz --delete -e "ssh -i private_key -o StrictHostKeyChecking=no" \
            .next/static/ $VPS_USER@$VPS_HOST:$VPS_DEST_PATH/.next/static/

          # Copy public folder
          rsync -avz --delete -e "ssh -i private_key -o StrictHostKeyChecking=no" \
            public/ $VPS_USER@$VPS_HOST:$VPS_DEST_PATH/public/

          # Install production node modules on VPS
          ssh -i private_key -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST << EOF
            cd $VPS_DEST_PATH
            npm ci --production

            # Restart or start PM2
            if pm2 list | grep -q "nextjs-app"; then
              pm2 restart nextjs-app
            else
              pm2 start server.js --name "nextjs-app"
            fi
          EOF

          # Clean up private key
          rm private_key
